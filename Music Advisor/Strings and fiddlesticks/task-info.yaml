type: edu
files:
  - name: src/advisor/Main.java
    visible: true
    text: |
      package advisor;
      
      public class Main {
          public static void main(String[] args) {
              System.out.println("Hello World!");
          }
      }
    learner_created: false
  - name: test/MusicAdvisorTest.java
    visible: false
    text: |-
      import org.hyperskill.hstest.stage.StageTest;
      import org.hyperskill.hstest.testcase.CheckResult;
      import org.hyperskill.hstest.testcase.TestCase;
      
      import java.util.List;
      import java.util.function.Function;
      
      class Attach {
          Function<String, CheckResult> func;
      
          Attach(Function<String, CheckResult> func) {
              this.func = func;
          }
      }
      
      public class MusicAdvisorTest extends StageTest<Attach> {
      
          @Override
          public List<TestCase<Attach>> generate() {
              return List.of(
                      new TestCase<Attach>()
                              .setInput("featured\nnew\nexit")
                              .setAttach(new Attach(reply -> {
                                  if (reply.split("\n").length == 0 || !reply.split("\n")[0].contains("---FEATURED---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  if (!reply.contains("---NEW RELEASES---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  return CheckResult.correct();
                              })),
                      new TestCase<Attach>()
                              .setInput("new\nexit")
                              .setAttach(new Attach(reply -> {
                                  if (reply.split("\n").length == 0 || !reply.split("\n")[0].contains("---NEW RELEASES---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  return CheckResult.correct();
                              })),
                      new TestCase<Attach>()
                              .setInput("categories\nexit")
                              .setAttach(new Attach(reply -> {
                                  if (reply.split("\n").length == 0 || !reply.split("\n")[0].contains("---CATEGORIES---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  return CheckResult.correct();
                              })),
                      new TestCase<Attach>()
                              .setInput("playlists Mood\ncategories\nexit")
                              .setAttach(new Attach(reply -> {
                                  if (reply.split("\n").length == 0 || !reply.split("\n")[0].contains("PLAYLISTS---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  if (!reply.contains("---CATEGORIES---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  return CheckResult.correct();
                              })),
                      new TestCase<Attach>()
                              .setInput("exit\n")
                              .setAttach(new Attach(reply -> {
                                  if (reply.split("\n").length == 0 || !reply.split("\n")[0].contains("---GOODBYE!---")) {
                                      return new CheckResult(false,
                                              "Wrong answer!");
                                  }
                                  return CheckResult.correct();
                              }))
              );
          }
      
          @Override
          public CheckResult check(String reply, Attach clue) {
              return clue.func.apply(reply);
          }
      }
    learner_created: false
  - name: build.gradle
    visible: true
    text: |-
      apply plugin: 'java'
      apply plugin: 'application'
      
      group 'advisor'
      version '1.0-SNAPSHOT'
      
      repositories {
          mavenCentral()
      }
      
      dependencies {
          implementation 'com.google.code.gson:gson:+'
      }
      
      jar {
          manifest {
              attributes 'Main-Class' : 'advisor.Main'
          }
          from {
              configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
          }
      }
    learner_created: false
feedback_link: https://hyperskill.org/learn/step/5477#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 25 Jan 2024 01:48:36 UTC"
record: 1
